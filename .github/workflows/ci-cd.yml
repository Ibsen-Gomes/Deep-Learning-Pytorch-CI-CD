name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)  # Adiciona o diretório raiz ao PYTHONPATH
          python -m pytest tests/ -v  # Roda os testes com verbosidade

  train:
    needs: test  # Só executa se o job 'test' passar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model
        run: |
          python src/train.py

      - name: Save model artifact
        uses: actions/upload-artifact@v2
        with:
          name: model
          path: model.pth

  deploy:
    needs: train  # Só executa se o job 'train' passar
    runs-on: ubuntu-latest
    steps:
      - name: Download model artifact
        uses: actions/download-artifact@v2
        with:
          name: model
          path: model

      - name: Deploy model (simulado)
        run: |
          echo "Modelo treinado salvo em model/model.pth"
          echo "Simulando implantação..."
          # Aqui você pode adicionar comandos para implantar o modelo em um ambiente de produção
          # Por exemplo, enviar o modelo para um servidor, atualizar um serviço, etc.